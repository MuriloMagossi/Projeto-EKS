name: AWS Lab Workflow

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  run-aws-commands-lab:
    name: Checkout AWS CLI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configura as credenciais da AWS usando OIDC e a Role do segredo
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Pega o ARN da Role diretamente do segredo do repositório
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # Defina a sua região da AWS
          aws-region: sa-east-1

      - name: Create and Configure S3 Backend Bucket
        run: |
            # Define as variáveis para o bucket
            BUCKET_NAME="terraform-state-eks-magossi"
            AWS_REGION="sa-east-1"
            
            echo "Tentando criar o bucket ${BUCKET_NAME}..."
            aws s3api create-bucket \
              --bucket ${BUCKET_NAME} \
              --region ${AWS_REGION} \
              --create-bucket-configuration LocationConstraint=${AWS_REGION} || true
            
            echo "Configurando bloqueio de acesso público..."
            aws s3api put-public-access-block \
              --bucket ${BUCKET_NAME} \
              --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true"
            
            echo "Ativando versionamento..."
            aws s3api put-bucket-versioning \
              --bucket ${BUCKET_NAME} \
              --versioning-configuration Status=Enabled
              
            echo "Ativando criptografia padrão..."
            aws s3api put-bucket-encryption \
              --bucket ${BUCKET_NAME} \
              --server-side-encryption-configuration '{"Rules": [{"ApplyServerSideEncryptionByDefault": {"SSEAlgorithm": "AES256"}}]}'
              
             echo "Bucket S3 configurado com sucesso!"

      - name: Create and configure DynamoDB
        run: |
          TABLE_NAME="terraform-state-lock-table"
          AWS_REGION="sa-east-1"

          aws dynamodb create-table \
            --table-name ${TABLE_NAME} \
            --attribute-definitions AttributeName=LockID,AttributeType=S \
            --key-schema AttributeName=LockID,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST \
            --region ${AWS_REGION}
    