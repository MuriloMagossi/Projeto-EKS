name: AWS Lab Workflow
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Ação a ser executada'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
permissions:
  id-token: write
  contents: read
jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init 
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan
        working-directory: ./terraform

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ./terraform/tfplan

  wait-for-apply-approval:
    name: Wait for Apply Approval
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
    needs: [plan]
    environment: 
      name: production-apply
    steps:
      - name: Approval gate
        run: echo "Aprovação para APPLY concedida. Prosseguindo..."

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: [wait-for-apply-approval]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ./terraform

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

  wait-for-destroy-approval:
    name: Wait for Destroy Approval
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    needs: [plan] # Opcional: pode gerar um plano de destroy antes de aprovar
    environment:
      name: production-destroy
    steps:
      - name: Approval gate
        run: echo "Aprovação para DESTROY concedida. Prosseguindo..."

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    needs: [wait-for-destroy-approval]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform
        
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform